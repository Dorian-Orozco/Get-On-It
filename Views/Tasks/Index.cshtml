@model IEnumerable<GetOnIt.Models.Tasks>

@{
    ViewData["Title"] = "Your Tasks";
}
<p>
    <a asp-action="Create">Create New</a>
</p>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

@{
    string taskPlural = "";
    if (ViewBag.taskCount > 1 || ViewBag.taskCount == 0)
    {
        taskPlural = "tasks";
    }
    else
    {
        taskPlural = "task";
    }
}


<table class="table table-striped table-hover table-bordered caption-top table-responsive">
    <caption>You currently have @ViewBag.taskCount @taskPlural due! Happy Studying!</caption>
    <thead>
        <tr>
            <th> 
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateStart)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateEnd)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Priority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsCompleted)
            </th>
            <th>Time Left</th>
            <th>Operations</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @item.DateStart.ToString("MMM dd, yyyy 'at' hh:mm tt")
                </td>
                <td>
                    @item.DateEnd.ToString("MMM dd, yyyy 'at' hh:mm tt")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Priority)
                </td>
                <td>
                    @if (item.IsCompleted) { <span>Completed</span> }
                    else  { <span>Not Completed</span> }
                </td>
                <td>@{
                        TimeSpan timeLeft = item.DateEnd - DateTime.Now;
                        string timeLeftString = "";
                        if(timeLeft.TotalSeconds < 0)
                        {
                            timeLeftString = "Past Due";
                        }
                        else
                        {
                            if((int)timeLeft.TotalDays == 0)
                            {
                                if ((int)timeLeft.TotalHours == 0)
                                {
                                    timeLeftString = $"{(int)timeLeft.Minutes} minutes left";
                                }
                                else
                                {
                                    timeLeftString = $"{(int)timeLeft.Hours} hours {(int)timeLeft.Minutes} minutes left";
                                }
                            }
                            else
                            {
                                timeLeftString = $"{(int)timeLeft.TotalDays} days {(int)timeLeft.Hours} hours {(int)timeLeft.Minutes} minutes left";
                            }
                        }
                        @timeLeftString
                    }
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> |
                    <a href="#" data-bs-toggle="modal" data-bs-target="#staticBackdrop" onclick="storeID(@item.Id)" data-id='@item.Id'>Complete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!--Modal to Confirm if users want to "complete" their task (in the future it will remove it from the list and potentially store it else where or delete it entirely after a few days?-->
<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Finished Task?</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you done? Already? Finishing this task will remove it from your tasks.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" id="btnConfirm" onclick="SetComplete()" class="btn btn-primary">Finish</button>
            </div>
        </div>
    </div>
</div>

<script>
    //Couldnt figure out how to pass the ID through the modal, so instead im storing the ID in local storage to be retrieved
    function storeID(ID){
        localStorage.setItem('taskId', ID);
        console.log(localStorage);
    }


    function SetComplete() {
        var id = localStorage.getItem('taskId');
        var url = '@Url.Action("SetComplete", "Tasks")';
        console.log(url);
        console.log(id);

        $.ajax({
            url: url,
            type: 'POST',
            data: { id: id }, 
            success: function (data) {
                localStorage.removeItem('taskId'); //remove item so it doesnt persist across pages
                location.reload(true);
            },
            error: function (xhr, status, error) {
                alert('Error happened: ' + error);
            }
        });
    }
</script>
