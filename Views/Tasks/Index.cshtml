@model IEnumerable<GetOnIt.Models.Tasks>

@{
    ViewData["Title"] = "Your Tasks";
}
<p>
    <a asp-action="Create">Create New</a>
</p>
Implement tabing here so you can tab into active assignments vs. closed assignments
<ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="pills-active-tab" data-bs-toggle="pill" data-bs-target="#pills-active" type="button" role="tab" aria-controls="pills-active" aria-selected="true">Active Tasks</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="pills-inactive-tab" data-bs-toggle="pill" data-bs-target="#pills-inactive" type="button" role="tab" aria-controls="pills-inactive" aria-selected="false">Inactive Tasks</button>
    </li>
</ul>
<div class="tab-content" id="pills-tabContent">
    <div class="tab-pane fade show active" id="pills-active" role="tabpanel" aria-labelledby="pills-active-tab">Viewing Active Tasks</div>
    <div class="tab-pane fade" id="pills-inactive" role="tabpanel" aria-labelledby="pills-inactive-tab">Viewing Inactive Tasks</div>
</div>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

<table class="table table-striped table-hover table-bordered caption-top table-responsive">
    <caption>You currently have @ViewBag.taskCount tasks due! Happy Studying!</caption>
    <thead>
        <tr>
            <th> 
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateStart)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateEnd)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Priority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsCompleted)
            </th>
            <th>Operations</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @item.DateStart.ToString("MMM dd, yyyy 'at' hh:mm tt")
                </td>
                <td>
                    @item.DateEnd.ToString("MMM dd, yyyy 'at' hh:mm tt")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Priority)
                </td>
                <td>
                    @if (item.IsCompleted) { <span>Completed</span> }
                    else  { <span>Not Completed</span> }
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> |
                    @Html.ActionLink("Completed", "SetComplete", null, new { id = "taskComplete" })
                </td>
            </tr>
        }
    </tbody>
</table>
 <script>
    $("#taskComplete").click(function (e) {

        e.preventDefault();
        $.ajax({

            url: $(this).attr("href"), // comma here instead of semicolon
            success: function () {
                alert("Value Added");  // or any other indication if you want to show
            }

        });

    });
 </script>