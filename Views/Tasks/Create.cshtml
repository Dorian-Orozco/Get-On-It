@model GetOnIt.Models.Tasks
@using GetOnIt.Utilities
@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Tasks</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DateStart" class="control-label"></label>
                <input asp-for="DateStart" type="date" value="@DateTime.Today" class="form-control" />
                <span asp-validation-for="DateStart" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DateEnd" class="control-label"></label>
                <input asp-for="DateEnd" type="date" class="form-control" />
                <span asp-validation-for="DateEnd" class="text-danger"></span>
            </div>

            <div class="form-group">
                <select class="form-control"
                        asp-for="Type"
                        asp-items="@Html.GetEnumSelectList<TaskType>()">
                </select>
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>

            <div class="form-group">
                <select class="form-control"
                        asp-for="Priority"
                        asp-items="@Html.GetEnumSelectList<TaskPriority>()">
                </select>
                <span asp-validation-for="Priority" class="text-danger"></span>
            </div>
            @* Don't need to include task is complete because a user is not going to create a task just to say its complete? *@
            @* <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsCompleted" /> @Html.DisplayNameFor(model => model.IsCompleted)
                </label>
            </div> *@

            <div class="form-group">
                <label asp-for="UserId" class="control-label"></label>
                <select asp-for="UserId" class ="form-control" asp-items="ViewBag.UserId"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
